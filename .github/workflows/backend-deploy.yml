name: Deploy Silverpotion Backend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout github
        uses: actions/checkout@v2

      - name: install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.25.9"
        id: install

      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key:  ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: update cluster infomation
        run: aws eks update-kubeconfig --name silverpotion_cluster --region ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
#          게이트웨이
      - name: gateway build and push docker image to ecr
        env:
          REGISTRY: 418295678070.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: silverpotion/gateway
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./gateway/Dockerfile ./gateway
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply gateway
        run: |
          kubectl apply -f ./gateway/k8s/k8sgateway.yml -n sp
          kubectl rollout restart deployment k8sgateway -n sp

      #          유저
      - name: user build and push docker image to ecr
        env:
          REGISTRY: 418295678070.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: silverpotion/user
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./user/Dockerfile ./user
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply user
        run: |
          kubectl apply -f ./user/k8s/userDepl.yml -n sp
          kubectl rollout restart deployment userDepl -n sp

#          포스트
      - name: post build and push docker image to ecr
        env:
          REGISTRY: 418295678070.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: silverpotion/post
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./post/Dockerfile ./post
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply post
        run: |
          kubectl apply -f ./post/k8s/zookeeper.yml -n sp
          kubectl rollout restart deployment zookeeper -n sp  
          kubectl apply -f ./post/k8s/kafka.yml -n sp
          kubectl rollout restart deployment kafka -n sp
          kubectl apply -f ./post/k8s/rabbit.yml  -n sp
          kubectl rollout restart deployment rabbit  -n sp 
          kubectl apply -f ./post/k8s/postDepl.yml  -n sp
          kubectl rollout restart deployment postDepl  -n sp 

#          채팅
      - name: chat build and push docker image to ecr
        env:
          REGISTRY: 418295678070.dkr.ecr.ap-northeast-2.amazonaws.com
          REPOSITORY: silverpotion/chat
          IMAGE_TAG: latest
        run: |
          docker build \
          -t $REGISTRY/$REPOSITORY:$IMAGE_TAG \
          -f ./chat/Dockerfile ./chat
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: eks kubectl apply chat
        run: |
          kubectl apply -f ./chat/k8s/chatDepl.yml -n sp
          kubectl rollout restart deployment chatDepl -n sp  
          
          

