apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sp-ingress
  namespace: sp
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: sp-issuer
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/upgrade: "websocket"
#    웹소켓 연결유지시 같은 pod에 접속하도록 session affinity 적용
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
#    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
    - hosts:
        - "server.silverpotion.site"
      secretName: server-silverpotion-site-tls
  rules:
    - host: server.silverpotion.site
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: gateway
                port:
                  number: 80

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: sp-issuer
  namespace: sp
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: rifkehtm862@gmail.com
    privateKeySecretRef:
      name: sp-issuer
    solvers:
      - http01:
          ingress:
            class: nginx
---
# 3.ClusterIssue를 사용하여 Certificate 리소스 생성 : Certificate리소스 생성시에 인증서 발급
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: server-silverpotion-site-tls
  namespace: sp
spec:
  secretName: server-silverpotion-site-tls
  duration: 2160h #90day
  renewBefore: 360h #before 15day
  issuerRef:
    name: sp-issuer
    kind: ClusterIssuer
  commonName: server.silverpotion.site
  dnsNames:
    - server.silverpotion.site